{"version":3,"sources":["api/api.js","images/edite.svg","images/delete.svg","pages/Main/Main.js","pages/Login/Login.js","pages/Register/Register.js","pages/AddPost/AddPost.js","pages/EditPost/Editpost.js","components/AddComment/AddComments.js","components/EditeComment/EditeComment.js","components/AnswerComment/AnsverComment.js","components/AnswerComments/AnswerComments.js","components/Comment/Comment.js","components/CommentsList/CommentsList.js","pages/Post/Post.js","App/App.js","index.js"],"names":["BASE_URL","createComment","text","id","comId","fetch","method","headers","Accept","Authorization","localStorage","getItem","body","JSON","stringify","post_id","reply_to_comment","then","res","ok","json","Promise","reject","status","Main","props","path","useRouteMatch","className","inLogged","onClick","onSignOut","to","dataPost","map","item","index","userId","user_id","src","editeIcon","alt","onClickDelete","deleteIcon","Login","onLogin","useState","name","email","values","setValues","handleChange","target","value","onSubmit","e","preventDefault","password","type","onChange","required","placeholder","minLength","Register","onRegister","userData","password_confirmation","AddPost","createPost","EditPost","useParams","post","data","find","p","toLocaleString","setText","React","useEffect","onUpdatePost","AddComments","addComment","isClickComment","addCommentAnswer","answComment","editComment","reset","rows","EditeComments","AnswerComment","onClickDeleteComment","handleClickComment","handleClickEdite","answerComments","replies","AnswerComments","length","Comment","onClickEditeButton","comments","setComments","onClickButtonComment","setAanswerComments","catch","err","console","error","CommentList","Post","setIsClickComment","isClickEdit","setIsClickEdit","setAnswComment","api","newsComment","newComment","filter","EditeComment","comment","App","setDataPost","setUserData","setinLogged","history","useHistory","tokenCheck","handleClickPostDelete","newPosts","exact","removeItem","token","setItem","finally","push","newPost","newsPost","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.063b8637.chunk.js","sourcesContent":["const BASE_URL = \"http://test.flcd.ru/api\";\n\nexport const getPost = () => {\n  return fetch(`${BASE_URL}/post`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\n\nexport const register = (name, email, password, password_confirmation) => {\n  return fetch(`${BASE_URL}/register`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ name, email, password, password_confirmation }),\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\n\nexport const login = (email, password) => {\n  return fetch(`${BASE_URL}/token`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify({ email, password }),\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(res.status);\n  });\n};\nexport const createPost = (text) => {\n  return fetch(`${BASE_URL}/post`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n    },\n    body: JSON.stringify(text),\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(res.status);\n  });\n};\n\nexport const removePost = (id) => {\n  return fetch(`${BASE_URL}/post/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n    },\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const editePost = (text, id) => {\n  return fetch(`${BASE_URL}/post/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n    },\n    body: JSON.stringify(text),\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const getComments = (id) => {\n  return fetch(`${BASE_URL}/post/${id}/comments`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const getCommentAnswer = (id) => {\n  return fetch(`${BASE_URL}/comment/${id}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n    },\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\nexport const createComment = (text, id, comId) => {\n  return fetch(`${BASE_URL}/comment`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n    },\n    body: JSON.stringify({ text, post_id: id, reply_to_comment: comId }),\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(res.status);\n  });\n};\nexport const removeComment = (id) => {\n  return fetch(`${BASE_URL}/comment/${id}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n    },\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};\n\nexport const editeComment = (text, id) => {\n  return fetch(`${BASE_URL}/comment/${id}`, {\n    method: \"PATCH\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\n    },\n    body: JSON.stringify(text),\n  }).then((res) => {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`Ошибка: ${res.status}`);\n  });\n};","export default __webpack_public_path__ + \"static/media/edite.fe1039f7.svg\";","export default __webpack_public_path__ + \"static/media/delete.3b402c45.svg\";","import \"./Main.css\";\nimport editeIcon from \"../../images/edite.svg\";\nimport deleteIcon from \"../../images/delete.svg\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nfunction Main(props) {\n  const { path } = useRouteMatch();\n  return (\n    <div className=\"main\">\n      <div className=\"main__container\">\n        {props.inLogged ? (\n          <button\n            onClick={props.onSignOut}\n            className=\"main__button\"\n            to=\"/login\"\n          >\n            Выйти\n          </button>\n        ) : (\n          <Link className=\"link\" to=\"/login\">\n            Войти\n          </Link>\n        )}\n\n        <Link className=\"link\" to=\"/add-post\">\n          Добавить пост\n        </Link>\n      </div>\n      {props.dataPost.map((item, index) => {\n        return (\n          <div className=\"post\" key={index}>\n            <Link className=\"post-link\" to={`${path}/${item.id}`}>\n              <p className=\"post__text\">{item.text}</p>\n            </Link>\n            {props.userId === item.user_id ? (\n              <div className=\"post__buttons\">\n                <Link className=\"post-link\" to={`${path}/edit/${item.id}`}>\n                  <button className=\"post__button\">\n                    <img src={editeIcon} alt=\"иконка\" />\n                  </button>\n                </Link>\n                <button\n                  onClick={() => {\n                    props.onClickDelete(item.id);\n                  }}\n                  className=\"post__button\"\n                >\n                  <img src={deleteIcon} alt=\"иконка\" />\n                </button>\n              </div>\n            ) : null}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Main;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Login.css\";\nconst Login = ({ onLogin }) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n  });\n\n  function handleChange({ target: { name, value } }) {\n    setValues({ ...values, [name]: value });\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    let { email, password } = values;\n    onLogin(email, password);\n  }\n  return (\n    <div className=\"login\">\n      <Link className=\"link\" to=\"/post\">\n        Вернуться на главную\n      </Link>\n      <h1 className=\"title-form\">Вход</h1>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"input-container\">\n          <label className=\"input__title\">Email</label>\n          <input\n            className=\"form__input\"\n            type=\"email\"\n            name=\"email\"\n            value={values.email || \"\"}\n            onChange={handleChange}\n            id=\"user-email\"\n            required\n            placeholder=\"Введите почту\"\n          ></input>\n        </div>\n        <div className=\"input-container\">\n          <label className=\"input__title\">Пароль</label>\n          <input\n            className=\"form__input\"\n            type=\"password\"\n            name=\"password\"\n            value={values.password || \"\"}\n            onChange={handleChange}\n            id=\"user-password-login\"\n            required\n            minLength=\"8\"\n            placeholder=\"Введите пароль\"\n          ></input>\n        </div>\n        <button className=\"form__button\" type=\"submit\">\n          Войти\n        </button>\n      </form>\n      <p className=\"form__link\">\n        или{\" \"}\n        <Link className=\"link\" to=\"/register\">\n          {\" \"}\n          Зарегистрироваться\n        </Link>\n      </p>\n    </div>\n  );\n};\nexport default Login;\n","import React, { useState } from \"react\";\nimport \"./Register.css\";\nimport { Link } from \"react-router-dom\";\nconst Register = ({ onRegister, userData }) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password_confirmation: \"\",\n  });\n\n  function handleChange({ target: { name, value } }) {\n    setValues({ ...values, [name]: value });\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    let { name, email, password, password_confirmation } = values;\n    if (password === password_confirmation) {\n      onRegister(name, email, password, password_confirmation);\n    }\n  }\n  return (\n    <div className=\"register\">\n      <Link className=\"link\" to=\"/post\">\n        Вернуться на главную\n      </Link>\n      <h1 className=\"title-form\">Регистрация</h1>\n      <form className=\"form\" onSubmit={handleSubmit}>\n        <div className=\"input-container\">\n          <label className=\"input__title\">Имя</label>\n          <input\n            className=\"form__input\"\n            type=\"text\"\n            name=\"name\"\n            value={values.name || \"\"}\n            onChange={handleChange}\n            id=\"user-name\"\n            required\n            placeholder=\"Введите имя\"\n          ></input>\n        </div>\n        <div className=\"input-container\">\n          <label className=\"input__title\">Email</label>\n          <input\n            className=\"form__input\"\n            type=\"email\"\n            name=\"email\"\n            value={values.email || \"\"}\n            onChange={handleChange}\n            id=\"user-email\"\n            required\n            placeholder=\"Введите почту\"\n          ></input>\n        </div>\n        <div className=\"input-container\">\n          {\" \"}\n          <label className=\"input__title\">Пароль</label>\n          <input\n            className=\"form__input\"\n            type=\"password\"\n            name=\"password\"\n            value={values.password || \"\"}\n            onChange={handleChange}\n            id=\"password-register\"\n            required\n            minLength=\"8\"\n            placeholder=\"Введите пароль\"\n          ></input>\n        </div>\n        <div className=\"input-container\">\n          <label className=\"input__title\">Введите пароль еще раз</label>\n          <input\n            className=\"form__input\"\n            type=\"password\"\n            name=\"password_confirmation\"\n            value={values.password_confirmation || \"\"}\n            onChange={handleChange}\n            id=\"password-retype-register\"\n            required\n            minLength=\"8\"\n            placeholder=\"Введите пароль\"\n          ></input>\n        </div>\n        <button className=\"form__button\" type=\"submit\">\n          Зарегистрироваться\n        </button>\n      </form>\n      <p className=\"form__link\">\n        или{\" \"}\n        <Link className=\"link\" to=\"/login\">\n          Войти\n        </Link>\n      </p>\n    </div>\n  );\n};\nexport default Register;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./AddPost.css\";\n\nconst AddPost = ({ createPost }) => {\n  const [values, setValues] = useState({\n    text: \"\",\n  });\n  function handleChange({ target: { name, value } }) {\n    setValues({ ...values, [name]: value });\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    createPost(values);\n  }\n  return (\n    <div className=\"add-post\">\n      <Link className=\"link\" to=\"/post\">\n        Вернуться на главную\n      </Link>\n      <h1 className=\"title-form\">Добавить пост</h1>\n      <form className=\"add-post__form\" onSubmit={handleSubmit}>\n        <textarea\n          className=\"add-post__text\"\n          name=\"text\"\n          type=\"text\"\n          value={values.text || \"\"}\n          onChange={handleChange}\n        ></textarea>\n        <button className=\"form__button\" type=\"submit\">\n          Отправить\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default AddPost;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nconst EditPost = (props) => {\n  let { id } = useParams();\n  const post = props.data.find(\n    (p) => p.id.toLocaleString() === id.toLocaleString()\n  );\n  const [text, setText] = useState({\n    text: \"\",\n  });\n  React.useEffect(() => {\n    setText(post.text);\n  }, [post]);\n\n  function handleChange(e) {\n    setText(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    props.onUpdatePost({ text }, id);\n  }\n  return (\n    <div className=\"add-post\">\n      <Link className=\"link\" to=\"/post\">\n        Вернуться на главную\n      </Link>\n      <h1 className=\"title-form\">Редактировать пост</h1>\n      <form className=\"add-post__form\" onSubmit={handleSubmit}>\n        <textarea\n          className=\"add-post__text\"\n          name=\"text\"\n          type=\"text\"\n          value={text || \"\"}\n          onChange={handleChange}\n        ></textarea>\n        <button className=\"form__button\" type=\"submit\">\n          Отправить\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default EditPost;\n","import React, { useState } from \"react\";\nimport \"./AddComments.css\";\n\nconst AddComments = ({\n  addComment,\n  isClickComment,\n  addCommentAnswer,\n  answComment,\n  editComment,\n}) => {\n  const [values, setValues] = useState({\n    text: \"\",\n  });\n  // React.useEffect(() => {\n  //   setValues(answComment);\n  // }, [answComment]);\n  function handleChange({ target: { name, value } }) {\n    setValues({ ...values, [name]: value });\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    addComment(values);\n    // editComment({ values }, answComment.id);\n    e.target.reset();\n  }\n  function handleSubmitAnswer(e) {\n    e.preventDefault();\n    addCommentAnswer(values);\n    // editComment({ values }, answComment.id);\n    e.target.reset();\n  }\n\n  return (\n    <div className=\"add-comments\">\n      {isClickComment ? (\n        <form className=\"add-comments__form\" onSubmit={handleSubmitAnswer}>\n          <textarea\n            className=\"add-comments__text\"\n            name=\"text\"\n            type=\"text\"\n            rows=\"3\"\n            value={values.text || \"\"}\n            onChange={handleChange}\n            placeholder=\"Ответить на комментарий... \"\n          ></textarea>\n          <button className=\"add-comments__button\" type=\"submit\">\n            Опубликовать\n          </button>\n        </form>\n      ) : (\n        <form className=\"add-comments__form\" onSubmit={handleSubmit}>\n          <textarea\n            className=\"add-comments__text\"\n            name=\"text\"\n            type=\"text\"\n            rows=\"3\"\n            value={values.text || \"\"}\n            onChange={handleChange}\n            placeholder=\"Добавить комментарий... \"\n          ></textarea>\n          <button className=\"add-comments__button\" type=\"submit\">\n            Опубликовать\n          </button>\n        </form>\n      )}\n    </div>\n  );\n};\nexport default AddComments;\n","import React, { useState } from \"react\";\n// import \"./AddComments.css\";\n\nconst EditeComments = ({\n  addComment,\n\n  addCommentAnswer,\n  answComment,\n  editComment,\n}) => {\n  const [text, setText] = useState({\n    text: \"\",\n  });\n  React.useEffect(() => {\n    setText(answComment.text);\n  }, [answComment]);\n  function handleChange(e) {\n    setText(e.target.value);\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    editComment({ text }, answComment.id);\n    e.target.reset();\n  }\n  return (\n    <div className=\"add-comments\">\n      <form className=\"add-comments__form\" onSubmit={handleSubmit}>\n        <textarea\n          className=\"add-comments__text\"\n          name=\"text\"\n          type=\"text\"\n          rows=\"3\"\n          value={text || \"\"}\n          onChange={handleChange}\n          placeholder=\"Ответить на комментарий... \"\n        ></textarea>\n        <button className=\"add-comments__button\" type=\"submit\">\n          Редактировать\n        </button>\n      </form>\n    </div>\n  );\n};\nexport default EditeComments;\n","import AnswerComments from \"../AnswerComments/AnswerComments\"\nimport editeIcon from \"../../images/edite.svg\";\nimport deleteIcon from \"../../images/delete.svg\";\nconst AnswerComment = ({ item, userId, onClickDeleteComment, handleClickComment, handleClickEdite }) => {\n    return (\n      <div className=\"comment\">\n        <p className=\"comment__text\">{item.text}</p>\n        <div className=\"comment__container\">\n          {userId === item.user_id ? (\n            <div className=\"comment__buttons\">\n              <button className=\"post__button\" onClick={handleClickEdite}>\n                <img src={editeIcon} alt=\"иконка\" />\n              </button>\n  \n              <button\n                className=\"post__button\"\n                onClick={() => {\n                  onClickDeleteComment(item.id);\n                }}\n              >\n                <img src={deleteIcon} alt=\"иконка\" />\n              </button>\n            </div>\n          ) : null}\n          <button className=\"comment__answer\" onClick={handleClickComment}>\n            Ответить\n          </button>\n        </div>\n        <AnswerComments answerComments={item.replies} onClickDeleteComment={onClickDeleteComment} handleClickComment={handleClickComment} handleClickEdite={handleClickEdite}/>\n      </div>\n    );\n  };\n  export default AnswerComment;","import AnswerComment from \"../AnswerComment/AnsverComment\";\n// import editeIcon from \"../../images/edite.svg\";\n// import deleteIcon from \"../../images/delete.svg\";\nconst AnswerComments = ({ answerComments, userId, onClickDeleteComment, handleClickComment, handleClickEdite}) => {\n\n  return (\n    <div>\n      {answerComments && answerComments.length !== 0  ? answerComments.map((item, index) => (\n        <AnswerComment key={index} item={item}  onClickDeleteComment={onClickDeleteComment} userId={userId} handleClickComment={handleClickComment} handleClickEdite={handleClickEdite}/>\n      )) : false}\n    </div>\n  );\n};\nexport default AnswerComments;\n","import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport \"./Comment.css\";\nimport editeIcon from \"../../images/edite.svg\";\nimport deleteIcon from \"../../images/delete.svg\";\nimport * as api from \"../../api/api\";\nimport AnswerComments from \"../AnswerComments/AnswerComments\";\n\nconst Comment = ({\n  item,\n  userId,\n  comments,\n  setComments,\n  onClickEditeButton,\n  onClickDeleteComment,\n  onClickButtonComment,\n}) => {\n  const [answerComments, setAanswerComments] = useState([]);\n\n  useEffect(() => {\n    api\n      .getCommentAnswer(item.id)\n      .then((data) => {\n        setAanswerComments(data.replies);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [answerComments]);\n\n  const handleClickComment = () => {\n    onClickButtonComment(item);\n  };\n  const handleClickEdite = () => {\n    onClickEditeButton(item);\n  };\n  return (\n    <div className=\"comment\">\n      <p className=\"comment__text\">{item.text}</p>\n      <div className=\"comment__container\">\n        {userId === item.user_id ? (\n          <div className=\"comment__buttons\">\n            <button className=\"post__button\" onClick={handleClickEdite}>\n              <img src={editeIcon} alt=\"иконка\" />\n            </button>\n\n            <button\n              className=\"post__button\"\n              onClick={() => {\n                onClickDeleteComment(item.id);\n              }}\n            >\n              <img src={deleteIcon} alt=\"иконка\" />\n            </button>\n          </div>\n        ) : null}\n        <button className=\"comment__answer\" onClick={handleClickComment}>\n          Ответить\n        </button>\n      </div>\n      <AnswerComments\n      handleClickEdite={handleClickEdite}\n        answerComments={answerComments}\n        onClickDeleteComment={onClickDeleteComment}\n        userId={userId}\n        handleClickComment={handleClickComment}\n      />\n    </div>\n  );\n};\nexport default Comment;\n","import React from \"react\";\n// import { Link } from \"react-router-dom\";\nimport \"./CommentsList.css\";\nimport Comment from \"../Comment/Comment\";\n\nconst CommentList = (props) => {\n  return (\n    <div className=\"comments\">\n      {props.comments.map((item, index) => (\n        <Comment comments={props.comments} onClickEditeButton={props.onClickEditeButton} setComments={props.setComments} key={index} item={item} userId={props.userId} onClickDeleteComment={props.onClickDeleteComment} onClickButtonComment={props.onClickButtonComment} />\n      ))}\n     \n    </div>\n  );\n};\nexport default CommentList;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams, Link} from \"react-router-dom\";\nimport editeIcon from \"../../images/edite.svg\";\nimport deleteIcon from \"../../images/delete.svg\";\nimport * as api from \"../../api/api\";\nimport AddComments from \"../../components/AddComment/AddComments\";\nimport EditeComments from \"../../components/EditeComment/EditeComment\";\nimport CommentsList from \"../../components/CommentsList/CommentsList\";\nfunction Post(props) {\n  let { id } = useParams();\n  const [comments, setComments] = useState([]);\n  const [isClickComment, setIsClickComment] = useState(false);\n  const [isClickEdit, setIsClickEdit] = useState(false);\n  const [answComment, setAnswComment] = useState({});\n  const post = props.data.find(\n    (p) => p.id.toLocaleString() === id.toLocaleString()\n  );\n  useEffect(() => {\n    api\n      .getComments(id)\n      .then((data) => {\n        setComments(data);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // Добавить комментарий\n  const addComment = ({ text }) => {\n    api\n      .createComment(text, post.id)\n      .then((comment) => {\n        setComments([comment, ...comments]);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n  // Удалить комментарий\n  const onClickDeleteComment = (id) => {\n    api\n      .removeComment(id)\n      .then(() => {\n        const newComment = comments.filter((p) => p.id !== id);\n        setComments(newComment);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n  const handleClickButtonComment = (item) => {\n    setAnswComment(item);\n    setIsClickEdit(false);\n    setIsClickComment(true);\n    \n  };\n  const handleClickEditeButtonComment = (item) => {\n    setAnswComment(item);\n    setIsClickComment(false);\n    setIsClickEdit(true);\n   \n  };\n  const addCommentAnswer = ({ text }) => {\n    api\n      .createComment(text, answComment.post_id, answComment.id)\n      .then((comment) => {\n        setComments([comment, ...comments]);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n  const editComment = (text, id) => {\n    api\n      .editeComment(text, id)\n      .then((data) => {\n        const newsComment = comments.map((item) => {\n          if (id === item.id) {\n            item = { ...data };\n          }\n          return item;\n        });\n        setComments(newsComment);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n  return (\n    <div>\n      <Link className=\"link\" to=\"/post\">\n        Вернуться на главную\n      </Link>\n      <div className=\"post\">\n        <p className=\"post__text\">{post.text}</p>\n        <div className=\"post__container\">\n          <p className=\"post__date\"></p>\n          {props.userId === post.user_id ? (\n            <div className=\"post__buttons\">\n              <Link className=\"post-link\" to={`/post/edit/${post.id}`}>\n                <button className=\"post__button\">\n                  <img src={editeIcon} alt=\"иконка\" />\n                </button>\n              </Link>\n              <button\n                onClick={() => {\n                  props.onClickDelete(post.id);\n                }}\n                className=\"post__button\"\n              >\n                <img src={deleteIcon} alt=\"иконка\" />\n              </button>\n            </div>\n          ) : null}\n        </div>\n        <CommentsList\n          userId={props.userId}\n          comments={comments}\n          onClickEditeButton={handleClickEditeButtonComment}\n          onClickDeleteComment={onClickDeleteComment}\n          onClickButtonComment={handleClickButtonComment}\n        />\n        {isClickEdit ? (\n          <EditeComments  answComment={answComment}\n          editComment={editComment}/>\n        ) : (\n          <AddComments\n            answComment={answComment}\n            addComment={addComment}\n            addCommentAnswer={addCommentAnswer}\n            isClickComment={isClickComment}\n            editComment={editComment}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Post;\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Route, Switch, useHistory, Redirect } from \"react-router-dom\";\nimport * as api from \"../api/api\";\nimport Main from \"../pages/Main/Main\";\nimport Login from \"../pages/Login/Login\";\nimport Register from \"../pages/Register/Register\";\nimport AddPost from \"../pages/AddPost/AddPost\";\nimport EditPost from \"../pages/EditPost/Editpost\";\nimport Post from \"../pages/Post/Post\";\n\nfunction App() {\n  const [dataPost, setDataPost] = useState([]);\n  const [userData, setUserData] = React.useState({\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    password_confirmation: \"\",\n  });\n  const [inLogged, setinLogged] = React.useState(false);\n  const history = useHistory();\n  const userId = 50;\n  React.useEffect(() => {\n    tokenCheck();\n  }, []);\n  useEffect(() => {\n    api\n      .getPost()\n      .then((data) => setDataPost(data))\n      .catch((err) => {\n        console.error(err);\n      });\n  }, []);\n  // Регистрация пользователя\n  const onRegister = (name, email, password, password_confirmation) => {\n    api\n      .register(name, email, password, password_confirmation)\n      .then((data) => {\n        console.log(data);\n        setUserData({\n          name: data.name,\n          email: data.email,\n          password: data.password,\n          password_confirmation: data.password_confirmation,\n        });\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(history.push(\"/login\"));\n  };\n  // Авторизация пользователя\n  const onLogin = (email, password) => {\n    api\n      .login(email, password)\n      .then((data) => {\n        if (data.token) {\n          localStorage.setItem(\"jwt\", data.token);\n          setUserData({\n            email: data.email,\n            password: data.password,\n          });\n          setinLogged(true);\n        }\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(history.push(\"/post\"));\n  };\n  // Добавление поста\n  const createPost = (text) => {\n    api\n      .createPost(text)\n      .then((newPost) => {\n        setDataPost([newPost, ...dataPost]);\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(history.push(\"/post\"));\n  };\n  // Удаление поста\n  const handleClickPostDelete = (id) => {\n    api\n      .removePost(id)\n      .then(() => {\n        const newPosts = dataPost.filter((p) => p.id !== id);\n        setDataPost(newPosts);\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n  const handleEditePost = (text, id) => {\n    api\n      .editePost(text, id)\n      .then((data) => {\n        const newsPost = dataPost.map((item) => {\n          if (id === item.id) {\n            item = { ...data };\n          }\n          return item;\n        });\n        setDataPost(newsPost);\n      })\n      .catch((err) => {\n        console.error(err);\n      })\n      .finally(history.push(\"/post\"));\n  };\n\n  const onSignOut = () => {\n    localStorage.removeItem(\"jwt\");\n    setinLogged(false);\n  };\n\n  // проверка токена\n  const tokenCheck = () => {\n    const jwt = localStorage.getItem(\"jwt\");\n    if (jwt) {\n      setinLogged(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path=\"/post\" exact>\n          <Main\n            dataPost={dataPost}\n            userId={userId}\n            onClickDelete={handleClickPostDelete}\n            inLogged={inLogged}\n            onSignOut={onSignOut}\n          />\n        </Route>\n        <Route exact path=\"/\">\n          <Redirect to=\"/post\" />\n        </Route>\n        <Route path=\"/login\">\n          <Login onLogin={onLogin} />\n        </Route>\n        <Route path=\"/add-post\">\n          <AddPost createPost={createPost} />\n        </Route>\n        <Route exact path=\"/post/:id\">\n          <Post\n            data={dataPost}\n            userId={userId}\n            onClickDelete={handleClickPostDelete}\n          />\n        </Route>\n        <Route path=\"/post/edit/:id\">\n          <EditPost data={dataPost} onUpdatePost={handleEditePost} />\n        </Route>\n        <Route path=\"/register\">\n          <Register onRegister={onRegister} userData={userData} />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App/App\";\nimport { BrowserRouter} from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}